Post.kt
**
package com.example.httprequest

import android.util.Log
import okhttp3.*
import org.json.JSONObject
import java.io.IOException

val TAG = "HTTP-Test"

data class BindUserDat(
    val houseNumber : String,
    val address : String,
    val floor : String,
    val symbol : String,
    val residentSerialNumber : String,
    val name : String,
    val gasNumber : String,
    val points : String
)

data class GetUserMail(
    val settingTime : String,
    val receiveTime : String,
    val floor : String,
    val receiveManger : String,
    val name : String,
    val status : String,
    val placement : String,
    val sort : String,
    val symbol : String,
    val type : String,
    val projectName : String,
    val returnForm : String,
    val houseName : String,
    val remarks : String,
    val mailNumber : String
)

class Post() {
    var client: OkHttpClient? = null
    private var onRequestListener : OnRequestListener? = null
    private val baseUrl = "https://asia-east2-ductech-cms.cloudfunctions.net/"

    init {
        client = OkHttpClient()
    }

    fun BindUserData(projectName: String, residentSerialNumber: String, phoneID: String, listener: OnRequestListener) {
        onRequestListener = listener
        var request: Request? = null
        val builder = FormBody.Builder()
        builder.add("ProjectName", projectName)
        builder.add("ResidentSerialNumber", residentSerialNumber)
        builder.add("PhoneID", phoneID)
        val formBody = builder.build()
        request = Request.Builder()
            .method("POST",formBody)
            .url(baseUrl + "BindUserData")
            .build()
        client?.newCall(request)?.enqueue(object : Callback {
            override fun onFailure(call: Call, e: IOException) {
                Log.d(TAG, "onFailure: " + e)
                onRequestListener?.onError()
            }

            lateinit var bindUserDat: BindUserDat
            override fun onResponse(call: Call, response: Response) {
                val responseStr = response.body()?.string()
                val itemList = JSONObject(responseStr)

                bindUserDat = BindUserDat(
                        houseNumber = itemList.getString("houseNumber"),
                        address = itemList.getString("address"),
                        floor = itemList.getString("floor"),
                        symbol = itemList.getString("symbol"),
                        residentSerialNumber = itemList.getString("residentSerialNumber"),
                        name = itemList.getString("name"),
                        gasNumber = itemList.getString("gasNumber"),
                        points = itemList.getString("points")
                    )

                    // TODO("response to json object")
                onRequestListener?.onSuccess(itemList)
                    Log.d(TAG, "" + itemList)
            }
        })
    }

    fun GetUserMail(projectName: String, houseSerialNumber: String, listener: OnRequestListener) {
        onRequestListener = listener
        var request: Request? = null
        val builder = FormBody.Builder()
        builder.add("ProjectName", projectName)
        builder.add("HouseSerialNumber", houseSerialNumber)
        val formBody = builder.build()
        request = Request.Builder()
            .method("POST",formBody)
            .url(baseUrl + "GetUserMail")
            .build()
        client?.newCall(request)?.enqueue(object : Callback {
            override fun onFailure(call: Call, e: IOException) {
                Log.d(TAG, "onFailure: " + e)
                onRequestListener?.onError()
            }

            lateinit var getUserMail: GetUserMail
            override fun onResponse(call: Call, response: Response) {
                val responseStr = response.body()?.string()

                if (responseStr == "null" || responseStr == "Error"){
                    onRequestListener?.onError()
                }else{
                    val itemList = JSONObject(responseStr)
                    getUserMail = GetUserMail(
                        settingTime = itemList.getString("settingTime"),
                        receiveTime = itemList.getString("receiveTime"),
                        floor = itemList.getString("floor"),
                        receiveManger = itemList.getString("receiveManger"),
                        name = itemList.getString("name"),
                        status = itemList.getString("status"),
                        placement = itemList.getString("placement"),
                        sort = itemList.getString("sort"),
                        symbol = itemList.getString("symbol"),
                        type = itemList.getString("type"),
                        projectName = itemList.getString("projectName"),
                        returnForm = itemList.getString("returnForm"),
                        houseName = itemList.getString("houseName"),
                        remarks = itemList.getString("remarks"),
                        mailNumber= itemList.getString("mailNumber")
                    )
                    // TODO("response to json object")
                    onRequestListener?.onSuccess(itemList)
                    Log.d(TAG, "" + itemList)
                }
            }
        })
    }

    interface OnRequestListener {
        fun onSuccess(result: Any)
        fun onError()
    }
}
=========================================================================================
MainActivity.kt
**
package com.example.httprequest

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.util.Log

val post = Post()

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)


        post.BindUserData( "DUCCMS", "2345", "123456789", object: Post.OnRequestListener {
            override fun onError() {
                Log.d(TAG, "onError: ")
            }

            override fun onSuccess(result: Any) {
                Log.d(TAG, "onSuccess: result" + result)
            }
        })

        post.GetUserMail("DUCCMS","123456789",object :Post.OnRequestListener{
            override fun onError() {
                Log.d(TAG, "onError: ")
            }

            override fun onSuccess(result: Any) {
                Log.d(TAG, "onSuccess: result" + result)
            }
        })

    }
}
===============================================================================
run
**
